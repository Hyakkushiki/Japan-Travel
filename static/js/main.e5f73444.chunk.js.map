{"version":3,"sources":["components/weatherComp.tsx","App.tsx","mapStyles.js","reportWebVitals.ts","index.tsx"],"names":["WeatherComp","props","useEffect","className","city","weather","time","src","icon","alt","description","temp","foreCast","length","foursquareObj","name","address","cat","date","libraries","mapContainerStyle","height","width","center","lat","lng","options","styles","featureType","elementType","stylers","weight","color","visibility","saturation","lightness","disableDefaultUI","zoomControl","emptyForeCast","emptyWeatherType","foursquare","require","clientID","process","clientSecret","App","useLoadScript","googleMapsApiKey","isLoaded","loadError","React","useState","setError","setWAPIIsLoaded","apiWeathers","setApiWeathers","fsItems","setFsItems","cleanFSItems","setCleanFSItems","CallFourSquare","params","venues","getVenues","then","res","response","oneCallForecast","fetch","json","result","console","log","error","Tokyo","Yokohama","Kyoto","Osaka","Sapporo","Nagoya","cities","setCities","cityNames","Object","keys","selectedCity","setSelectedCity","zoom","map","cStats","position","onClick","fillWeather","fillForecast","obj","array","i","ob","element","location","categories","prefix","push","fillFoursquare","url","origin","window","google","maps","Point","anchor","scaledSize","Size","label","title","onCloseClick","current","Date","dt","getDate","getHours","getMinutes","daily","day","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5f73444.chunk.js","sourcesContent":["import './weatherComp.css';\r\nimport { cityType, foursquareType} from \"../interfaces\";\r\nimport FoursquareComp from \"./foursquareComp\";\r\nimport { useEffect } from 'react';\r\n\r\ninterface Props {\r\n  city: cityType;\r\n  foursquareObj: foursquareType[];\r\n  weatherObj?: any;\r\n  description?: string;\r\n  temperature?: number;\r\n  icon?: string;\r\n}\r\n\r\nfunction WeatherComp(props: Props) {\r\n  useEffect(() => {\r\n    // console.log(\"weather comp\");\r\n    // console.log(props.city.foreCast);\r\n    // console.log(props.foursquareObj);\r\n  });\r\n\r\n  return (\r\n  <div className=\"uber-container\">\r\n\r\n    <div className=\"top-container\">\r\n      <div className=\"current-weather-time\">\r\n          <div className=\"date-container\">\r\n              <div className=\"time\"> {props.city.weather.time} </div>\r\n              {/* <div className=\"date\"> Monday, 25 May </div> */}\r\n              <div className=\"others\">Asia/Tokyo, JP</div>\r\n          </div>\r\n\r\n          <div className=\"date-weather-container\">\r\n            <div className=\"city-name\"> {props.city.weather.city} </div>\r\n            <img src={'http://openweathermap.org/img/wn/' + props.city.weather.icon + '@2x.png'} alt=\"icon\"></img>\r\n            <div className=\"other\">\r\n                <div className=\"description\">{props.city.weather.description}</div>\r\n                <div className=\"temp\">Temperature: {props.city.weather.temp}&deg; C</div>\r\n            </div>\r\n            {/* <div className=\"day\">{props.city.weather.date}日</div> */}\r\n          </div>\r\n\r\n      </div>\r\n    </div>\r\n    \r\n    <div className=\"mid-container\">\r\n      <div className=\"foursquare\">\r\n        {props.city.foreCast.length > 1 ? (\r\n          <div className=\"foursquare-places\">\r\n            \r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.foursquareObj[0].name}</div>\r\n                <img src={props.foursquareObj[0].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.foursquareObj[0].address}</div>\r\n                <div className=\"temp\">{props.foursquareObj[0].cat}</div>\r\n            </div>\r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.foursquareObj[1].name}</div>\r\n                <img src={props.foursquareObj[1].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.foursquareObj[1].address}</div>\r\n                <div className=\"temp\">{props.foursquareObj[1].cat}</div>\r\n            </div>\r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.foursquareObj[2].name}</div>\r\n                <img src={props.foursquareObj[2].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.foursquareObj[2].address}</div>\r\n                <div className=\"temp\">{props.foursquareObj[2].cat}</div>\r\n            </div>\r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.foursquareObj[3].name}</div>\r\n                <img src={props.foursquareObj[3].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.foursquareObj[3].address}</div>\r\n                <div className=\"temp\">{props.foursquareObj[3].cat}</div>\r\n            </div>\r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.foursquareObj[4].name}</div>\r\n                <img src={props.foursquareObj[4].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.foursquareObj[4].address}</div>\r\n                <div className=\"temp\">{props.foursquareObj[4].cat}</div>\r\n            </div>\r\n            \r\n          </div>\r\n          ) : <div>Select a City</div>\r\n        }\r\n      </div>\r\n    </div>\r\n    \r\n  <div className=\"bottom-container\">\r\n    <div className=\"future-weather\">\r\n      {props.city.foreCast.length > 1 ? (\r\n        <div className=\"weather-forecast\">\r\n          \r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[0].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[0].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[0].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[0].temp}&deg; C</div>\r\n          </div>\r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[1].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[1].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[1].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[1].temp}&deg; C</div>\r\n          </div>\r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[2].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[2].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[2].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[2].temp}&deg; C</div>\r\n          </div>\r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[3].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[3].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[3].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[3].temp}&deg; C</div>\r\n          </div>\r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[4].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[4].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[4].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[4].temp}&deg; C</div>\r\n          </div>\r\n          \r\n        </div>\r\n        ) : <div>Select a City</div>\r\n      }\r\n    </div>\r\n  </div>\r\n    \r\n</div>\r\n  );\r\n}\r\n\r\nexport default WeatherComp;","import React, { useEffect } from 'react';\nimport './App.css';\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport mapStyles from \"./mapStyles\";\nimport WeatherComp from \"./components/weatherComp\";\nimport FoursquareComp from \"./components/foursquareComp\";\nimport { cityType, city, weatherType, foreCast, foursquareType } from \"./interfaces\";\n\nconst libraries: any = [\"places\"];\nconst googleMapsApiKey: any = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100%\", // \"98.5vw\",\n};\nconst center = {\n  lat: 38.6762,\n  lng: 139.6503,\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: false,\n  zoomControl: true,\n};\n\ndeclare global {\n  interface Window {\n      google:any;\n  }\n}\n\nconst WEATHER_API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\nconst emptyForeCast: foreCast[] = [{description: \"blank\", icon:  \"blank\", temp: 0, city:  \"blank\", date: 0}];\nconst emptyWeatherType: weatherType = {description: \"blank\", icon: \"blank\", date: 0,\n  temp: 0, city: \"blank\", time: \"blank\"};\n\nconst foursquare = require('react-foursquare')({\n  clientID: process.env.REACT_APP_FS_CLIENT_ID,\n  clientSecret: process.env.REACT_APP_FS_CLIENT_SECRET  \n});\n\n\nfunction App() {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey,\n    libraries,\n  });\n\n  const [error, setError] = React.useState<any>(null);\n  const [isWAPILoaded, setWAPIIsLoaded] = React.useState(false);\n  const [apiWeathers, setApiWeathers] = React.useState<any[]>([]);\n  const [fsItems, setFsItems] = React.useState<any[]>([]);\n  const [cleanFSItems, setCleanFSItems] = React.useState<foursquareType[]>([]);\n\n  useEffect(() => {\n    oneCallForecast(35.689499, 139.691711);\n    CallFourSquare(35.689499, 139.691711);\n    \n  //   const promise = new Promise((resolve, reject) => {\n  //     oneCallForecast(35.689499, 139.691711);\n  //     CallFourSquare(35.689499, 139.691711);\n  //   })\n  //   promise.then(res => {\n  //     cities['Tokyo'] = { lat: 35.689499, lng: 139.691711, name: \"Tokyo\",\n  //       weather: fillWeather(apiWeathers, 'Tokyo'), foreCast: fillForecast(apiWeathers, 'Tokyo')\n  //     }\n  //     setCities(cities);\n  //     setCleanFSItems(fillFoursquare(fsItems));\n  //     setSelectedCity(cities['Tokyo']);\n  //     console.log(\"made it here\");\n  // })\n\n    \n  }, [])\n\n  function CallFourSquare(lat: number | null, lng: number | null) {\n    var params = {\n      \"ll\": `${lat},${lng}`,\n      \"query\": ''\n    };\n    foursquare.venues.getVenues(params)\n      .then((res: any)=> {\n        setFsItems(res.response.venues);\n        // console.log('foursquare here');\n        // console.log(res.response.venues);\n        // console.log(fsItems[0]);\n      });\n  }\n\n  function oneCallForecast(lat: number | null, lng: number | null) {\n    fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&exclude=minutely,hourly,alerts&units=metric&&appid=${WEATHER_API_KEY}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setApiWeathers(result);\n          setWAPIIsLoaded(true);\n\n          console.log(result);\n          console.log(\"app component\");\n          \n        },\n        (error) => {\n          setWAPIIsLoaded(false);\n          setError(error);\n        }\n      )\n  }\n\n\n  const [ cities, setCities ] = React.useState<city>(\n    { \n      Tokyo: { lat: 35.689499, lng: 139.691711, name: \"Tokyo\", weather: emptyWeatherType, foreCast: emptyForeCast },\n      Yokohama: { lat: 35.447781, lng: 139.642502, name: \"Yokohama\", weather: emptyWeatherType, foreCast: emptyForeCast },\n      Kyoto: { lat: 35.021069, lng: 135.753845, name: \"Kyoto\", weather: emptyWeatherType, foreCast: emptyForeCast },\n      Osaka: { lat: 34.693741, lng: 135.502182, name: \"Osaka\", weather: emptyWeatherType, foreCast: emptyForeCast },\n      Sapporo: { lat: 43.064171, lng: 141.346939, name: \"Sapporo\", weather: emptyWeatherType, foreCast: emptyForeCast },\n      Nagoya: { lat: 35.181469, lng: 136.906403, name: \"Nagoya\", weather: emptyWeatherType, foreCast: emptyForeCast },\n    },\n    );\n  \n  const cityNames = Object.keys(cities);\n\n  const [ selectedCity, setSelectedCity ] = React.useState<cityType>(\n    {\n    lat: 35.689499, lng: 139.691711, name: \"Tokyo\", weather: emptyWeatherType, foreCast: emptyForeCast\n    }\n  );\n\n  if (loadError) return (<div>\"Error\"</div>);\n  if (!isLoaded) return (<div>\"Loading....\"</div>);\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n\n    {/* <div>Error: {error !== null ? error.message : 'No errors, YAY!'}</div>\n   \n    {!isWAPILoaded ? <div>Loading...</div> : \n    <div>Finished Loading...:\n    </div>}\n    {apiWeathers.map((item) => {\n        return(<h2>\n          {item.name}\n        </h2>)\n      })} */}\n    <div className=\"right-side\">\n      <WeatherComp city={selectedCity} foursquareObj={cleanFSItems}></WeatherComp>\n    {/* <FoursquareComp foursquareObj={cleanFSItems}></FoursquareComp> */}\n    </div>\n    \n    <div className=\"left-side\">\n      <GoogleMap mapContainerStyle={mapContainerStyle} zoom={6} center={center} options={options}>\n      {cityNames.map((cStats) => (\n          <Marker\n            key={`${cities[cStats].lat}-${cities[cStats].lng}`}\n            position={{ lat: cities[cStats].lat, lng: cities[cStats].lng }}\n            onClick={() => {\n              if (cities[cStats].foreCast[0].city === \"blank\" || cities[cStats].weather.city === \"blank\"\n              || cleanFSItems[0].name === \"\") {\n                CallFourSquare(cities[cStats].lat, cities[cStats].lng);\n                oneCallForecast(cities[cStats].lat, cities[cStats].lng);\n                \n                cities[cStats] = {lat: cities[cStats].lat, lng: cities[cStats].lng, name: cities[cStats].name,\n                weather: fillWeather(apiWeathers, cities[cStats].name), foreCast: fillForecast(apiWeathers, cities[cStats].name)};\n\n                setCities(cities);\n              }\n              setCleanFSItems(fillFoursquare(fsItems));\n              setSelectedCity(cities[cStats]);\n            }}\n            icon={{\n              url: \"/city.svg\",\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(40, 30),\n              scaledSize: new window.google.maps.Size(80, 60),\n            }}\n            label={cities[cStats].name}\n            title={cities[cStats].name}\n          />\n        ))}\n\n      {selectedCity.lat && cleanFSItems.length > 1 ? (\n          <InfoWindow\n            position={{ lat: selectedCity.lat, lng: selectedCity.lng }}\n            onCloseClick={() => {\n              setSelectedCity(selectedCity);\n            }}\n          >\n            <div>\n              <h2>{selectedCity.weather.city}</h2>\n\n              <h2>{selectedCity.weather.temp} &deg;C</h2>\n              <img src={'http://openweathermap.org/img/wn/' + selectedCity.weather.icon + '@2x.png'} alt=\"icon\"></img>\n              <p>{selectedCity.weather.description}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction fillWeather(obj: any, name: string): weatherType {\n  const element: weatherType = {description: obj.current.weather[0].description, icon: obj.current.weather[0].icon,\n    temp: obj.current.temp, city: name, date: new Date(obj.current.dt*1000+(32400*1000)).getDate(),\n    time: `${new Date((obj.current.dt*1000)+32400).getHours()}:  ${new Date((obj.current.dt*1000)+32400).getMinutes()}`};\n\n  return element;\n}\nfunction fillForecast(obj: any, name: string): foreCast[] {\n  let array: any = [];\n  for (let i = 1; i < obj.daily.length; i++) {\n    const ob = obj.daily[i];\n    const element: foreCast = {description: ob.weather[0].description, icon: ob.weather[0].icon,\n      temp: ob.temp.day, city: name, date: new Date((ob.dt*1000)+32400).getDate()};\n    array.push(element);\n  }\n\n  return array;\n}\nfunction fillFoursquare(obj: any): foursquareType[] {\n  // console.log('---here---');\n  // console.log(obj);\n  let array: any = [];\n  for (let i = 0; i < 5; i++) {\n    const ob = obj[i];\n    const element: foursquareType = {\n      name: ob.name, lat: ob.location.lat, lng: ob.location.lng, address: ob.location.address,\n      icon: ob.categories[0].icon.prefix, cat: ob.categories[0].name,\n      };\n    array.push(element);\n  }\n  return array;\n}\n","export default [\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          weight: \"2.00\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#9c9c9c\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"labels.text\",\r\n      stylers: [\r\n        {\r\n          visibility: \"on\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          color: \"#f2f2f2\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape.man_made\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"poi\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          saturation: -100,\r\n        },\r\n        {\r\n          lightness: 45,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#eeeeee\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#7b7b7b\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"simplified\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road.arterial\",\r\n      elementType: \"labels.icon\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"transit\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          color: \"#46bcec\",\r\n        },\r\n        {\r\n          visibility: \"on\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#c8d7d4\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#070707\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n  ];","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}