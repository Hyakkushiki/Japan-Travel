{"version":3,"sources":["mapStyles.js","components/WeatherBox.tsx","components/apiCalls.ts","components/GoogleMapsHolder.tsx","components/weatherComp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mapStyles","featureType","elementType","stylers","weight","color","visibility","saturation","lightness","WeatherBox","props","Container","style","background","className","Card","border","Body","Title","date","Img","variant","src","icon","description","Text","temp","WEATHER_API_KEY","process","OrigOneCallForecast","coords","town","a","ct","fetch","lat","lng","then","res","json","result","console","log","weatherType","fillWeather","foreCast","fillForecast","error","obj","name","current","weather","city","Date","dt","getDate","time","getHours","getMinutes","array","i","daily","length","ob","element","day","push","newCallFourSquare","query","locale","endPoint","params","client_id","client_secret","ll","radius","limit","v","axios","get","URLSearchParams","response","fillFoursquare","catch","retrunObj","object","odr","data","venues","groups","items","map","address","location","categories","prefix","cat","venue","libraries","GoogleMapsHolder","useLoadScript","googleMapsApiKey","isLoaded","loadError","options","styles","disableDefaultUI","zoomControl","startingCities","React","useState","citiesList","setCitiesList","selectedCity","setSelectedCity","apiWeathers","setApiWeathers","apiForecast","setApiForecast","foursquareItems","setFoursquareItems","oneCallForecast","weatherObjPromise","baba","callFourSquare","fSObjPromise","fsCall","useEffect","theCity","pop","onMapClicked","useCallback","event","latLng","concat","mapRef","useRef","onMapLoad","mapContainerStyle","height","width","zoom","center","onLoad","onClick","preCity","position","origin","window","google","maps","Point","anchor","scaledSize","Size","opacity","title","currWeather","foursquarePlaces","newCitisArray","nanoid","onCloseClick","WeatherComp","alt","App","currCity","setCurrCity","Tabs","defaultActiveKey","id","Tab","eventKey","citi","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAAaA,EAAY,CACrB,CACEC,YAAa,MACbC,YAAa,gBACbC,QAAS,CACP,CACEC,OAAQ,UAId,CACEH,YAAa,MACbC,YAAa,kBACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,MACbC,YAAa,cACbC,QAAS,CACP,CACEG,WAAY,QAIlB,CACEL,YAAa,YACbC,YAAa,MACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,YACbC,YAAa,gBACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,qBACbC,YAAa,gBACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,MACbC,YAAa,MACbC,QAAS,CACP,CACEG,WAAY,SAIlB,CACEL,YAAa,OACbC,YAAa,MACbC,QAAS,CACP,CACEI,YAAa,KAEf,CACEC,UAAW,MAIjB,CACEP,YAAa,OACbC,YAAa,gBACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,OACbC,YAAa,mBACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,OACbC,YAAa,qBACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,eACbC,YAAa,MACbC,QAAS,CACP,CACEG,WAAY,gBAIlB,CACEL,YAAa,gBACbC,YAAa,cACbC,QAAS,CACP,CACEG,WAAY,SAIlB,CACEL,YAAa,UACbC,YAAa,MACbC,QAAS,CACP,CACEG,WAAY,SAIlB,CACEL,YAAa,QACbC,YAAa,MACbC,QAAS,CACP,CACEE,MAAO,WAET,CACEC,WAAY,QAIlB,CACEL,YAAa,QACbC,YAAa,gBACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,QACbC,YAAa,mBACbC,QAAS,CACP,CACEE,MAAO,aAIb,CACEJ,YAAa,QACbC,YAAa,qBACbC,QAAS,CACP,CACEE,MAAO,c,uBCjKF,SAASI,EAAWC,GAEjC,OACE,cAACC,EAAA,EAAD,CAEEC,MAAO,CAGLC,WAAY,uBAEdC,UAAU,eAPZ,SASE,cAACC,EAAA,EAAD,CAAMC,OAAO,QAAb,SACE,eAACD,EAAA,EAAKE,KAAN,WACE,eAACF,EAAA,EAAKG,MAAN,CACEJ,UAAU,OADZ,UASGJ,EAAMS,KATT,YAWA,cAACJ,EAAA,EAAKK,IAAN,CACEC,QAAQ,MAERC,IAAK,oCAAsCZ,EAAMa,KAAO,YAG1D,uBAAOT,UAAU,yBAAjB,SACGJ,EAAMc,cAET,eAACT,EAAA,EAAKU,KAAN,eAAaf,EAAMgB,KAAnB,oB,6BCpCJC,EAAkBC,mCAEjB,SAAeC,EAAtB,oC,4CAAO,WAAmCC,EAAuBC,GAA1D,iBAAAC,EAAA,yDACgB,iDACC,iCAElBC,EAAc,OAATF,EAAgB,GAAKA,EAEhB,MAAVD,EANC,gCAOgBI,MAAM,GAAD,OANL,iDAMK,gBAAwBJ,EAAOK,IAA/B,gBAA0CL,EAAOM,IAAjD,sBALJ,iCAKI,gCACmBT,IACtCU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GAYC,OARAC,QAAQC,IAAI,qBACZD,QAAQC,IAAIF,GAKa,CAAEG,YAHTC,EAAYJ,EAAQP,GAGaY,SAD9BC,EAAaN,EAAQP,OAK5C,SAACc,GAKC,OAFAN,QAAQC,IAAI,mBACZD,QAAQC,IAAI,UAAYK,GACjB,MA9BZ,OAOCP,EAPD,qCAkCDC,QAAQC,IAAI,8CAlCX,kBAmCM,IAnCN,iCAqCEF,GArCF,6C,sBAwCL,SAASI,EAAYI,EAAUC,GAQ7B,OAP+BA,EAAM,CAACzB,YAAawB,EAAIE,QAAQC,QAAQ,GAAG3B,YAAaD,KAAMyB,EAAIE,QAAQC,QAAQ,GAAG5B,KAClHG,KAAMsB,EAAIE,QAAQxB,KAAM0B,KAAMH,EAAM9B,KAAM,IAAIkC,KAAoB,IAAfL,EAAIE,QAAQI,GAAS,OAAaC,UACrFC,KAAK,GAAD,OAAK,IAAIH,KAAqB,IAAfL,EAAIE,QAAQI,GAAS,OAAOG,WAA3C,cAA2D,IAAIJ,KAAqB,IAAfL,EAAIE,QAAQI,GAAS,OAAOI,eACnG,CAAClC,YAAawB,EAAIE,QAAQC,QAAQ,GAAG3B,YAAaD,KAAMyB,EAAIE,QAAQC,QAAQ,GAAG5B,KAC/EG,KAAMsB,EAAIE,QAAQxB,KAAMP,KAAM,IAAIkC,KAAoB,IAAfL,EAAIE,QAAQI,GAAS,OAAaC,UACzEC,KAAK,GAAD,OAAK,IAAIH,KAAqB,IAAfL,EAAIE,QAAQI,GAAS,OAAOG,WAA3C,cAA2D,IAAIJ,KAAqB,IAAfL,EAAIE,QAAQI,GAAS,OAAOI,eAI3G,SAASZ,EAAaE,EAAUC,GAE9B,IADA,IAAIU,EAAa,GACRC,EAAI,EAAGA,EAAIZ,EAAIa,MAAMC,OAAQF,IAAK,CACzC,IAAMG,EAAKf,EAAIa,MAAMD,GACfI,EAAoB,CAACxC,YAAauC,EAAGZ,QAAQ,GAAG3B,YAAaD,KAAMwC,EAAGZ,QAAQ,GAAG5B,KACrFG,KAAMqC,EAAGrC,KAAKuC,IAAKb,KAAMH,EAAM9B,KAAM,IAAIkC,KAAY,IAANU,EAAGT,GAAS,OAAOC,WACpEI,EAAMO,KAAKF,GAGb,OAAOL,EAIF,SAAeQ,EAAtB,sC,4CAAO,WAAiCrC,EAAgBsC,EAAgBC,GAAjE,mBAAArC,EAAA,6DACCsC,EAAaF,EAAQ,+CAAiD,gDACtEG,EAAS,CACbC,UAAkD5C,mDAClD6C,cAA0D7C,mDAC1D8C,GAAG,GAAD,OAAK5C,EAAOK,IAAZ,YAAmBL,EAAOM,KAC5BgC,MAASA,GAAgB,GACzBO,OAAQ,QACRC,MAAO,IACPC,EAAG,WACHR,OAAUA,GAAkB,MAVzB,SAeaS,IAAMC,IAAIT,EAAW,IAAIU,gBAAgBT,IAC1DlC,MAAK,SAAA4C,GAEJ,OADwBC,EAAeD,MAEtCE,OAAO,SAAApC,GAGN,OAFAN,QAAQC,IAAI,wBACZD,QAAQC,IAAIK,GACL,MAtBN,cAeLqC,EAfK,yBAyBIA,GAzBJ,4C,sBA4BP,SAASF,EAAeG,GACtB,IAAI1B,EAAa,GACX2B,EAAMD,EAAOE,KAAKN,SAkBxB,OAjBcK,EAAIE,OAASF,EAAIE,OAASF,EAAIG,OAAO,GAAGC,OAClDC,KAAI,SAAC5B,GACP,IAAIC,EAA4BsB,EAAIE,OAC9B,CACAvC,KAAMc,EAAGd,KAAM2C,QAAS7B,EAAG8B,SAASD,QACpC9D,OAAQ,CAAEK,IAAK4B,EAAG8B,SAAS1D,IAAKC,IAAK2B,EAAG8B,SAASzD,KACjDb,KAAMwC,EAAG+B,WAAW,GAAGvE,KAAKwE,OAAQC,IAAKjC,EAAG+B,WAAW,GAAG7C,MAExD,CACAA,KAAMc,EAAGkC,MAAMhD,KAAM2C,QAAS7B,EAAGkC,MAAMJ,SAASD,QAChD9D,OAAQ,CAAEK,IAAK4B,EAAGkC,MAAMJ,SAAS1D,IAAKC,IAAK2B,EAAGkC,MAAMJ,SAASzD,KAC7Db,KAAMwC,EAAGkC,MAAMH,WAAW,GAAGvE,KAAKwE,OAAQC,IAAKjC,EAAGkC,MAAMH,WAAW,GAAG7C,MAI1E,OAFAU,EAAMO,KAAKF,GAEJA,KAENL,EC3GX,IAAMuC,EAAiB,CAAC,UAaT,SAASC,EAAiBzF,GACvC,MAAgC0F,YAAc,CAC5CC,iBAd0BzE,0CAe1BsE,cAFMI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAaZC,EAAU,CACdC,OAAQzG,EACR0G,kBAAkB,EAClBC,aAAa,GAITC,EAA6B,CACjC,CAAE9E,OAAQ,CAAEK,IAAK,UAAWC,IAAK,YAAca,KAAM,SACrD,CAAEnB,OAAQ,CAAEK,IAAK,UAAWC,IAAK,YAAca,KAAM,YACrD,CAAEnB,OAAQ,CAAEK,IAAK,UAAWC,IAAK,YAAca,KAAM,SACrD,CAAEnB,OAAQ,CAAEK,IAAK,UAAWC,IAAK,YAAca,KAAM,SACrD,CAAEnB,OAAQ,CAAEK,IAAK,UAAWC,IAAK,YAAca,KAAM,WACrD,CAAEnB,OAAQ,CAAEK,IAAK,UAAWC,IAAK,YAAca,KAAM,WAIvD,EAAsC4D,IAAMC,SAAqBF,GAAjE,mBAAQG,EAAR,KAAoBC,EAApB,KACA,EAA0CH,IAAMC,SAAmB,IAAnE,mBAAQG,EAAR,KAAsBC,EAAtB,KACA,EAAsCL,IAAMC,SAAsB,IAAlE,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCP,IAAMC,SAAqB,IAAjE,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA8CT,IAAMC,SAA2B,IAA/E,mBAAOS,EAAP,KAAwBC,EAAxB,KAnC8D,SAwDjDC,EAxDiD,8EAwDhE,WAA+B3F,GAA/B,iBAAAE,EAAA,6DACQ0F,EAAoB7F,EAAoBC,EAAQ,MADxD,SAIuB4F,EAAkBrF,MACnC,SAACG,GAQC,OAPAC,QAAQC,IAAIF,EAAOG,aACnBF,QAAQC,IAAI,mBACNF,EAAOG,aAAiBH,EAAOK,WACnCuE,EAAe5E,EAAOG,aACtB2E,EAAe9E,EAAOK,WAGjBL,EAAOK,YAbtB,cAIU8E,EAJV,yBAeaA,GAfb,4CAxDgE,+BA0EjDC,EA1EiD,kFA0EhE,WAA8B9F,EAAgBsC,EAAgBC,GAA9D,iBAAArC,EAAA,6DACQ6F,EAAe1D,EAAkBrC,EAAQsC,EAAOC,GADxD,SAEuBwD,EACpBxF,MAAK,SAACG,GAEL,OADAgF,EAAmBhF,GACZA,KALX,cAEQsF,EAFR,OAOErF,QAAQC,IAAI,kBACZD,QAAQC,IAAIoF,GAEZN,EAAmBM,GAVrB,kBAWSA,GAXT,4CA1EgE,sBAuC9DjB,IAAMkB,WAAU,WACdtF,QAAQC,IAAI,6BACZD,QAAQC,IAAIuE,GACRA,IAAiB,IACnBvG,EAAMsH,QAAQf,KAIf,CAACA,IAEJJ,IAAMkB,WAAU,WAChB,GAAGhB,EAAWjD,OAAS,EACXiD,EAAWkB,MAEvBxF,QAAQC,IAAIuE,KACX,CAACF,IAkCF,IAAMmB,EAAerB,IAAMsB,aAAY,SAACC,GACtC3F,QAAQC,IAAI,gCACZD,QAAQC,IAAI,CAACP,IAAKiG,EAAMC,OAAOlG,MAAOC,IAAKgG,EAAMC,OAAOjG,QAExD,IAAMgB,EAAO,CACbA,KAAY,QACZA,EAAKtB,OAAS,CAACK,IAAKiG,EAAMC,OAAOlG,MAAOC,IAAKgG,EAAMC,OAAOjG,OACzD4E,EAAcJ,EAAe0B,OAAOlF,MACpC,IAGGmF,EAAS1B,IAAM2B,SACfC,EAAY5B,IAAMsB,aAAY,SAACxC,GACnC4C,EAAOrF,QAAUyC,IACjB,IAEF,OAAIY,EAAmB,0CAClBD,EAEH,eAAC,IAAD,CAAWoC,kBArGa,CACxBC,OAAQ,SACRC,MAAO,QAmG0CC,KAAM,EAAGC,OAjG7C,CACb3G,IAAK,QACLC,IAAK,UAgGHoE,QAASA,EAASuC,OAAQN,EAAWO,QAASd,EADhD,UAESnB,EAAWpB,KAAI,SAACsD,GAAD,OACZ,cAAC,IAAD,CAEEC,SAAWD,EAAQnH,OACnBP,KAAM,CACJ4H,OAAQ,IAAIC,OAAOC,OAAOC,KAAKC,MAAM,EAAG,GACxCC,OAAQ,IAAIJ,OAAOC,OAAOC,KAAKC,MAAM,GAAI,IACzCE,WAAY,IAAIL,OAAOC,OAAOC,KAAKI,KAAK,GAAI,KAE9CC,QAA2B,SAAjBV,EAAQhG,KAAkB,EAAI,GAExC2G,MAAOX,EAAQhG,KAEf+F,QAAO,sBAAE,4BAAAhH,EAAA,sEAEDyF,EAAgBwB,EAAQnH,QAFvB,uBAGD8F,EAAeqB,EAAQnH,QAHtB,OAKPmH,EAAQY,YAAc1C,EACtB8B,EAAQpG,SAAWwE,EACnB4B,EAAQa,iBAAmBvC,EAC3BL,EAAgB+B,GAGVc,EAA4BhD,EAAWpB,KAAI,SAAC3C,GAIhD,OAHIA,EAAIlB,SAAWmH,EAAQnH,SACzBkB,EAAMiG,GAEDjG,KAGTgE,EAAc+C,GAlBP,6CAXJC,kBAmCP/C,GAAkBA,EAAa4C,YAC/B,cAAC,IAAD,CACEX,SAAWjC,EAAanF,OACxBmI,aAAc,WACZ/C,EAAgB,KAHpB,SAME,8BACE,cAACzG,EAAD,eAAiB0G,QAGlB,iDApDM,gD,MCIV+C,MA1Hf,SAAqBxJ,GAMnB,OALAqH,qBAAU,WACRtF,QAAQC,IAAI,qBACZD,QAAQC,IAAIhC,MAId,sBAAKI,UAAU,iBAAf,UAEE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,uBAAf,UACI,sBAAKA,UAAU,iBAAf,UACQJ,EAAM0C,KAAKyG,YAAe,sBAAK/I,UAAU,OAAf,cAAwBJ,EAAM0C,KAAKyG,YAAYrG,KAA/C,OAC5B,wBAEF,qBAAK1C,UAAU,SAAf,+BAGDJ,EAAM0C,KAAKyG,YACd,sBAAK/I,UAAU,yBAAf,UACE,sBAAKA,UAAU,YAAf,cAA6BJ,EAAM0C,KAAKyG,YAAYzG,KAApD,OACA,qBAAK9B,IAAK,oCAAsCZ,EAAM0C,KAAKyG,YAAYtI,KAAO,UAAW4I,IAAI,SAC7F,sBAAKrJ,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,SAA8BJ,EAAM0C,KAAKyG,YAAYrI,cACrD,sBAAKV,UAAU,OAAf,0BAAoCJ,EAAM0C,KAAKyG,YAAYnI,KAA3D,kBAIF,UAMV,qBAAKZ,UAAU,gBAAf,SACE,qBAAKA,UAAU,aAAf,SACMJ,EAAM0C,KAAKP,UAAYnC,EAAM0C,KAAKP,SAASiB,OAAS,GAAOpD,EAAM0C,KAAK0G,iBACxE,sBAAKhJ,UAAU,oBAAf,UAEE,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG7G,OACtD,qBAAK3B,IAAKZ,EAAM0C,KAAK0G,iBAAiB,GAAGvI,KAAO,SAAU4I,IAAI,SAC9D,sBAAKrJ,UAAU,cAAf,oBAAqCJ,EAAM0C,KAAK0G,iBAAiB,GAAGlE,WACpE,qBAAK9E,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG9D,SAE1D,sBAAKlF,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG7G,OACtD,qBAAK3B,IAAKZ,EAAM0C,KAAK0G,iBAAiB,GAAGvI,KAAO,SAAU4I,IAAI,SAC9D,sBAAKrJ,UAAU,cAAf,oBAAqCJ,EAAM0C,KAAK0G,iBAAiB,GAAGlE,WACpE,qBAAK9E,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG9D,SAE1D,sBAAKlF,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG7G,OACtD,qBAAK3B,IAAKZ,EAAM0C,KAAK0G,iBAAiB,GAAGvI,KAAO,SAAU4I,IAAI,SAC9D,sBAAKrJ,UAAU,cAAf,oBAAqCJ,EAAM0C,KAAK0G,iBAAiB,GAAGlE,WACpE,qBAAK9E,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG9D,SAE1D,sBAAKlF,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG7G,OACtD,qBAAK3B,IAAKZ,EAAM0C,KAAK0G,iBAAiB,GAAGvI,KAAO,SAAU4I,IAAI,SAC9D,sBAAKrJ,UAAU,cAAf,oBAAqCJ,EAAM0C,KAAK0G,iBAAiB,GAAGlE,WACpE,qBAAK9E,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG9D,SAE1D,sBAAKlF,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG7G,OACtD,qBAAK3B,IAAKZ,EAAM0C,KAAK0G,iBAAiB,GAAGvI,KAAO,SAAU4I,IAAI,SAC9D,sBAAKrJ,UAAU,cAAf,oBAAqCJ,EAAM0C,KAAK0G,iBAAiB,GAAGlE,WACpE,qBAAK9E,UAAU,OAAf,SAAuBJ,EAAM0C,KAAK0G,iBAAiB,GAAG9D,YAIxD,oDAKZ,qBAAKlF,UAAU,mBAAf,SACE,qBAAKA,UAAU,iBAAf,SACMJ,EAAM0C,KAAKP,UAAYnC,EAAM0C,KAAKP,SAASiB,OAAS,EACtD,sBAAKhD,UAAU,mBAAf,UAEE,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAG1B,KAA9C,YACA,qBAAKG,IAAK,oCAAsCZ,EAAM0C,KAAKP,SAAS,GAAGtB,KAAO,UAAW4I,IAAI,SAC7F,qBAAKrJ,UAAU,cAAf,SAA8BJ,EAAM0C,KAAKP,SAAS,GAAGrB,cACrD,sBAAKV,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAGnB,KAA9C,eAEJ,sBAAKZ,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAG1B,KAA9C,YACA,qBAAKG,IAAK,oCAAsCZ,EAAM0C,KAAKP,SAAS,GAAGtB,KAAO,UAAW4I,IAAI,SAC7F,qBAAKrJ,UAAU,cAAf,SAA8BJ,EAAM0C,KAAKP,SAAS,GAAGrB,cACrD,sBAAKV,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAGnB,KAA9C,eAEJ,sBAAKZ,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAG1B,KAA9C,YACA,qBAAKG,IAAK,oCAAsCZ,EAAM0C,KAAKP,SAAS,GAAGtB,KAAO,UAAW4I,IAAI,SAC7F,qBAAKrJ,UAAU,cAAf,SAA8BJ,EAAM0C,KAAKP,SAAS,GAAGrB,cACrD,sBAAKV,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAGnB,KAA9C,eAEJ,sBAAKZ,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAG1B,KAA9C,YACA,qBAAKG,IAAK,oCAAsCZ,EAAM0C,KAAKP,SAAS,GAAGtB,KAAO,UAAW4I,IAAI,SAC7F,qBAAKrJ,UAAU,cAAf,SAA8BJ,EAAM0C,KAAKP,SAAS,GAAGrB,cACrD,sBAAKV,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAGnB,KAA9C,eAEJ,sBAAKZ,UAAU,eAAf,UACI,sBAAKA,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAG1B,KAA9C,YACA,qBAAKG,IAAK,oCAAsCZ,EAAM0C,KAAKP,SAAS,GAAGtB,KAAO,UAAW4I,IAAI,SAC7F,qBAAKrJ,UAAU,cAAf,SAA8BJ,EAAM0C,KAAKP,SAAS,GAAGrB,cACrD,sBAAKV,UAAU,OAAf,UAAuBJ,EAAM0C,KAAKP,SAAS,GAAGnB,KAA9C,kBAIF,wDChEG0I,MAhDf,WACE,MAAkCvD,IAAMC,SAAmB,IAA3D,mBAAQuD,EAAR,KAAkBC,EAAlB,KAcA,OAZAzD,IAAMkB,WAAU,WACdtF,QAAQC,IAAI,4BACZD,QAAQC,IAAI2H,KACZ,CAACA,IAUD,qBAAKvJ,UAAU,MAAf,SACE,eAACyJ,EAAA,EAAD,CAAMC,iBAAiB,MAAMC,GAAG,2BAA2B3J,UAAU,SAArE,UACE,cAAC4J,EAAA,EAAD,CAAKC,SAAS,MAAMf,MAAM,MAAM9I,UAAU,GAA1C,SACA,qBAAKA,UAAU,YAAf,SACE,cAACqF,EAAD,CAAkB6B,QAZD,SAAC4C,GACxBnI,QAAQC,IAAI,wCACZD,QAAQC,IAAIkI,GACZN,EAAYM,UAaR,cAACF,EAAA,EAAD,CAAKC,SAAS,OAAOf,MAAM,OAA3B,SACE,qBAAK9I,UAAU,aAAf,SACE,cAAC,EAAD,CAAasC,KAAMiH,cCrBhBQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB1I,MAAK,YAAkD,IAA/C2I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.77e21be6.chunk.js","sourcesContent":["export const mapStyles = [\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          weight: \"2.00\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"geometry.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#9c9c9c\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"all\",\r\n      elementType: \"labels.text\",\r\n      stylers: [\r\n        {\r\n          visibility: \"on\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          color: \"#f2f2f2\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"landscape.man_made\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"poi\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          saturation: -100,\r\n        },\r\n        {\r\n          lightness: 45,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#eeeeee\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#7b7b7b\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road.highway\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"simplified\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"road.arterial\",\r\n      elementType: \"labels.icon\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"transit\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          visibility: \"off\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"all\",\r\n      stylers: [\r\n        {\r\n          color: \"#46bcec\",\r\n        },\r\n        {\r\n          visibility: \"on\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"geometry.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#c8d7d4\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.fill\",\r\n      stylers: [\r\n        {\r\n          color: \"#070707\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      featureType: \"water\",\r\n      elementType: \"labels.text.stroke\",\r\n      stylers: [\r\n        {\r\n          color: \"#ffffff\",\r\n        },\r\n      ],\r\n    },\r\n  ];","import { Card, Container } from \"react-bootstrap\";\r\nimport { weatherType } from \"../interfaces\";\r\n\r\n\r\nexport default function WeatherBox(props: weatherType) {\r\n\r\n  return (\r\n    <Container\r\n      // fluid\r\n      style={{\r\n        // width: \"100%\",\r\n        // height: \"100%\",\r\n        background: \"rgb(200, 0, 0, 0.8)\"\r\n      }}\r\n      className=\"p-1 info-box\"\r\n    >\r\n      <Card border=\"light\">\r\n        <Card.Body>\r\n          <Card.Title\r\n            className=\"date\"\r\n            // style={{\r\n            //   width: \"30%\",\r\n            //   color: \"white\",\r\n            //   background: \"#3c3c44\",\r\n            //   padding: \"5px 15px\"\r\n            // }}\r\n          >\r\n            {props.date}日\r\n          </Card.Title>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            // src={props.icon}\r\n            src={'http://openweathermap.org/img/wn/' + props.icon + '@2x.png'}\r\n            // style={{ border: \"1px solid #ddd\" }}\r\n          />\r\n          <small className=\"text-muted description\">\r\n            {props.description}\r\n          </small>\r\n          <Card.Text> {props.temp}&deg; C </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { weatherType, coords, foreCast, weatherBlend, foursquareType } from \"../interfaces\";\r\nconst WEATHER_API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\r\n\r\nexport async function OrigOneCallForecast(coords: coords | null, town: string | null): Promise<weatherBlend> {\r\n  const API_ENDPOINT = 'http://api.openweathermap.org/data/2.5/onecall';\r\n  const EXCLUDED_DATA = 'exclude=minutely,hourly,alerts';\r\n  let result: any;\r\n  let ct = town === null ? \"\" : town;\r\n\r\n  if (coords != null) {\r\n        result = await fetch(`${API_ENDPOINT}?lat=${coords.lat}&lon=${coords.lng}&\r\n        ${EXCLUDED_DATA}&units=metric&&appid=${WEATHER_API_KEY}`)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            // setApiWeathers(result);\r\n            // setWAPIIsLoaded(true);\r\n            \r\n            console.log(\"api call result: \");\r\n            console.log(result);\r\n            \r\n            const nowWether = fillWeather(result, ct);\r\n            // console.log(nowWether);\r\n            const futureWether = fillForecast(result, ct);\r\n            const wb: weatherBlend = { weatherType: nowWether, foreCast: futureWether };\r\n\r\n            return wb;\r\n          },\r\n          (error) => {\r\n            // setWAPIIsLoaded(false);\r\n            // setError(error);\r\n            console.log(\"error triggered\");\r\n            console.log(\"error: \" + error);\r\n            return {} as weatherBlend;\r\n          }\r\n        )\r\n      } else {\r\n      console.log(\"null coords were fed into weather api call\");\r\n      return {} as weatherBlend;\r\n  }\r\n  return result;\r\n};\r\n\r\n  function fillWeather(obj: any, name?: string): weatherType {\r\n    const element: weatherType = !!name? {description: obj.current.weather[0].description, icon: obj.current.weather[0].icon,\r\n      temp: obj.current.temp, city: name, date: new Date(obj.current.dt*1000+(32400*1000)).getDate(),\r\n      time: `${new Date((obj.current.dt*1000)+32400).getHours()}:  ${new Date((obj.current.dt*1000)+32400).getMinutes()}`}\r\n      : {description: obj.current.weather[0].description, icon: obj.current.weather[0].icon,\r\n        temp: obj.current.temp, date: new Date(obj.current.dt*1000+(32400*1000)).getDate(),\r\n        time: `${new Date((obj.current.dt*1000)+32400).getHours()}:  ${new Date((obj.current.dt*1000)+32400).getMinutes()}`};\r\n  \r\n    return element;\r\n  }\r\n  function fillForecast(obj: any, name: string): foreCast[] {\r\n    let array: any = [];\r\n    for (let i = 1; i < obj.daily.length; i++) {\r\n      const ob = obj.daily[i];\r\n      const element: foreCast = {description: ob.weather[0].description, icon: ob.weather[0].icon,\r\n        temp: ob.temp.day, city: name, date: new Date((ob.dt*1000)+32400).getDate()};\r\n      array.push(element);\r\n    }\r\n  \r\n    return array;\r\n  }\r\n\r\n\r\n  export async function newCallFourSquare(coords: coords, query?: string, locale?: string): Promise<foursquareType[]> {\r\n    const endPoint = !!query ? 'https://api.foursquare.com/v2/venues/search?' : 'https://api.foursquare.com/v2/venues/explore?';\r\n    const params = {\r\n      client_id: !!process.env.REACT_APP_FS_CLIENT_ID ? process.env.REACT_APP_FS_CLIENT_ID : 'undefined',\r\n      client_secret: !!process.env.REACT_APP_FS_CLIENT_SECRET ? process.env.REACT_APP_FS_CLIENT_SECRET : 'undefined',\r\n      ll: `${coords.lat},${coords.lng}`,\r\n      query: !!query ? query : '',\r\n      radius: '10000',\r\n      limit: '5',\r\n      v: '20210101',\r\n      locale: !!locale ? locale : 'en',\r\n    };\r\n\r\n    let retrunObj: foursquareType[];\r\n  \r\n    retrunObj = await axios.get(endPoint + new URLSearchParams(params))\r\n    .then(response => {\r\n      const transformedData = fillFoursquare(response);\r\n      return transformedData;\r\n    }).catch((error=>{\r\n        console.log('axios get call error');\r\n        console.log(error);\r\n        return {} as foursquareType[];\r\n      }));\r\n\r\n      return retrunObj;\r\n  }\r\n\r\n  function fillFoursquare(object: any): foursquareType[] {\r\n    let array: any = [];\r\n    const odr = object.data.response;\r\n    const obj = !!odr.venues ? odr.venues : odr.groups[0].items; // for explore case const ob = obj.data.response.venues;\r\n    obj.map((ob: any) => {\r\n      let element: foursquareType = !!odr.venues ?\r\n            {\r\n            name: ob.name, address: ob.location.address,\r\n            coords: { lat: ob.location.lat, lng: ob.location.lng },\r\n            icon: ob.categories[0].icon.prefix, cat: ob.categories[0].name,\r\n            }\r\n            : {\r\n              name: ob.venue.name, address: ob.venue.location.address,\r\n              coords: { lat: ob.venue.location.lat, lng: ob.venue.location.lng },\r\n              icon: ob.venue.categories[0].icon.prefix, cat: ob.venue.categories[0].name,\r\n              };\r\n          array.push(element);\r\n\r\n          return element;\r\n    });\r\n    return array;\r\n  }\r\n","import React from \"react\";\r\nimport { GoogleMap, Marker, InfoWindow, useLoadScript } from \"@react-google-maps/api\";\r\nimport { cityType, coords, foreCast, foursquareType, weatherType } from \"../interfaces\";\r\nimport { mapStyles } from \"../mapStyles\";\r\nimport WeatherBox from \"./WeatherBox\";\r\nimport { nanoid } from 'nanoid';\r\nimport { newCallFourSquare, OrigOneCallForecast } from \"./apiCalls\";\r\n\r\nconst libraries: any = [\"places\"];\r\nconst googleMapsApiKey: any = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\ndeclare global {\r\n  interface Window {\r\n      google:any;\r\n  }\r\n}\r\n\r\ninterface PropsInterface {\r\n  theCity: any;\r\n}\r\n\r\n\r\nexport default function GoogleMapsHolder(props: PropsInterface) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey,\r\n    libraries,\r\n  });\r\n  \r\n  const mapContainerStyle = {\r\n    height: \"93.5vh\",\r\n    width: \"100%\", // \"98.5vw\",\r\n  };\r\n  const center = {\r\n    lat: 38.6762,\r\n    lng: 139.6503,\r\n  };\r\n  const options = {\r\n    styles: mapStyles,\r\n    disableDefaultUI: false,\r\n    zoomControl: true,\r\n  };\r\n\r\n  const tokyoCoords: coords = { lat: 35.689499, lng: 139.691711 };\r\n  const startingCities: cityType[] = [ \r\n    { coords: { lat: 35.689499, lng: 139.691711 }, name: \"Tokyo\" },\r\n    { coords: { lat: 35.447781, lng: 139.642502 }, name: \"Yokohama\" },\r\n    { coords: { lat: 35.021069, lng: 135.753845 }, name: \"Kyoto\" },\r\n    { coords: { lat: 34.693741, lng: 135.502182 }, name: \"Osaka\" },\r\n    { coords: { lat: 43.064171, lng: 141.346939 }, name: \"Sapporo\" },\r\n    { coords: { lat: 35.181469, lng: 136.906403 }, name: \"Nagoya\" },\r\n  ];\r\n\r\n  // const [error, setError] = React.useState<any>(null);\r\n  const [ citiesList, setCitiesList ] = React.useState<cityType[]>(startingCities);\r\n  const [ selectedCity, setSelectedCity ] = React.useState<cityType>({} as cityType);\r\n  const [apiWeathers, setApiWeathers] = React.useState<weatherType>({} as weatherType);\r\n  const [apiForecast, setApiForecast] = React.useState<foreCast[]>([]);\r\n  const [foursquareItems, setFoursquareItems] = React.useState<foursquareType[]>({} as foursquareType[]);\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    console.log('selected city has changed');\r\n    console.log(selectedCity);\r\n    if (selectedCity !== {} as cityType) {\r\n      props.theCity(selectedCity);\r\n    }\r\n    \r\n    // setSelectedCity(preCity);\r\n  }, [selectedCity])\r\n\r\n  React.useEffect(() => {\r\n  if(citiesList.length > 7) {\r\n    const p = citiesList.pop();\r\n  }\r\n  console.log(selectedCity);\r\n}, [citiesList])\r\n\r\nasync function oneCallForecast(coords: coords | null) {\r\n  const weatherObjPromise = OrigOneCallForecast(coords, null);\r\n    // console.log(weatherObjPromise);\r\n\r\n    const baba = await weatherObjPromise.then(\r\n      (result) => {\r\n        console.log(result.weatherType);\r\n        console.log('oneCallForecast');\r\n        if (!!result.weatherType && !!result.foreCast) {\r\n          setApiWeathers(result.weatherType);\r\n          setApiForecast(result.foreCast);\r\n          \r\n        }\r\n        return result.foreCast;\r\n      });\r\n      return baba;\r\n}\r\n\r\nasync function callFourSquare(coords: coords, query?: string, locale?: string) {\r\n  const fSObjPromise = newCallFourSquare(coords, query, locale);\r\n  const fsCall = await fSObjPromise\r\n  .then((result) => {\r\n    setFoursquareItems(result);\r\n    return result;\r\n  });\r\n  console.log('fsCall value: ');\r\n  console.log(fsCall);\r\n  \r\n  setFoursquareItems(fsCall);\r\n  return fsCall;\r\n}\r\n\r\n  const onMapClicked = React.useCallback((event) => {\r\n    console.log('onMapClicked func is called!');\r\n    console.log({lat: event.latLng.lat(), lng: event.latLng.lng()});\r\n    // setCitiesList(... citiesList, selectedCity);\r\n    const city = {} as cityType;\r\n    city.name = \"user\";\r\n    city.coords = {lat: event.latLng.lat(), lng: event.latLng.lng()};\r\n     setCitiesList(startingCities.concat(city));\r\n  }, []);\r\n\r\n\r\n  const mapRef = React.useRef(); // state will rerender, changing ref will not rerender\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  },[]);\r\n\r\n  if (loadError) return (<div>\"Error\"</div>);\r\n  if (!isLoaded) return (<div>\"Loading....\"</div>);\r\n  return (\r\n    <GoogleMap mapContainerStyle={mapContainerStyle} zoom={6} center={center}\r\n      options={options} onLoad={onMapLoad} onClick={onMapClicked}>\r\n            {citiesList.map((preCity) => (\r\n                <Marker\r\n                  key={nanoid()}\r\n                  position={ preCity.coords }\r\n                  icon={{\r\n                    origin: new window.google.maps.Point(0, 0),\r\n                    anchor: new window.google.maps.Point(40, 30),\r\n                    scaledSize: new window.google.maps.Size(80, 60),\r\n                  }}\r\n                  opacity={ preCity.name === 'user' ? 1 : 0.5}\r\n                  // label={cities[cStats].name}\r\n                  title={preCity.name}\r\n\r\n                  onClick={async () => {\r\n                    \r\n                    await oneCallForecast(preCity.coords);\r\n                    await callFourSquare(preCity.coords);\r\n \r\n                    preCity.currWeather = apiWeathers;\r\n                    preCity.foreCast = apiForecast;\r\n                    preCity.foursquarePlaces = foursquareItems;\r\n                    setSelectedCity(preCity);\r\n                    // props.theCity(selectedCity);\r\n\r\n                    const newCitisArray: cityType[] = citiesList.map((obj) => {\r\n                      if (obj.coords === preCity.coords) {\r\n                        obj = preCity;\r\n                      }\r\n                      return obj;\r\n                    });\r\n\r\n                    setCitiesList(newCitisArray);\r\n                  }}\r\n                  \r\n                />\r\n              ))}\r\n\r\n            { !!selectedCity && !!selectedCity.currWeather ? (\r\n                <InfoWindow\r\n                  position={ selectedCity.coords }\r\n                  onCloseClick={() => {\r\n                    setSelectedCity({} as cityType);\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <WeatherBox { ...apiWeathers } />\r\n                  </div>\r\n                </InfoWindow>\r\n              ) : (<div> Hello Joe </div>)}\r\n            </GoogleMap>\r\n  );\r\n}\r\n\r\n// 210","import './weatherComp.css';\r\nimport { cityType, foursquareType} from \"../interfaces\";\r\nimport { useEffect } from 'react';\r\n\r\ninterface Props {\r\n  city: cityType;\r\n}\r\n\r\nfunction WeatherComp(props: Props) {\r\n  useEffect(() => {\r\n    console.log('child props: ... ');\r\n    console.log(props);\r\n  });\r\n\r\n  return (\r\n  <div className=\"uber-container\">\r\n\r\n    <div className=\"top-container\">\r\n      <div className=\"current-weather-time\">\r\n          <div className=\"date-container\">\r\n              { !!props.city.currWeather ? (<div className=\"time\"> {props.city.currWeather.time} </div>)\r\n              : <div></div> }\r\n              {/* <div className=\"date\"> Monday, 25 May </div> */}\r\n              <div className=\"others\">Asia/Tokyo, JP</div>\r\n          </div>\r\n\r\n          {!!props.city.currWeather ? (\r\n          <div className=\"date-weather-container\">\r\n            <div className=\"city-name\"> {props.city.currWeather.city} </div>\r\n            <img src={'http://openweathermap.org/img/wn/' + props.city.currWeather.icon + '@2x.png'} alt=\"icon\"></img>\r\n            <div className=\"other\">\r\n                <div className=\"description\">{props.city.currWeather.description}</div>\r\n                <div className=\"temp\">Temperature: {props.city.currWeather.temp}&deg; C</div>\r\n            </div>\r\n            {/* <div className=\"day\">{props.city.weather.date}日</div> */}\r\n          </div>\r\n          ) : null\r\n          }\r\n\r\n      </div>\r\n    </div>\r\n    \r\n    <div className=\"mid-container\">\r\n      <div className=\"foursquare\">\r\n        { !!props.city.foreCast && props.city.foreCast.length > 1 && !!props.city.foursquarePlaces? (\r\n          <div className=\"foursquare-places\">\r\n            \r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.city.foursquarePlaces[0].name}</div>\r\n                <img src={props.city.foursquarePlaces[0].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.city.foursquarePlaces[0].address}</div>\r\n                <div className=\"temp\">{props.city.foursquarePlaces[0].cat}</div>\r\n            </div>\r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.city.foursquarePlaces[1].name}</div>\r\n                <img src={props.city.foursquarePlaces[1].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.city.foursquarePlaces[1].address}</div>\r\n                <div className=\"temp\">{props.city.foursquarePlaces[1].cat}</div>\r\n            </div>\r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.city.foursquarePlaces[2].name}</div>\r\n                <img src={props.city.foursquarePlaces[2].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.city.foursquarePlaces[2].address}</div>\r\n                <div className=\"temp\">{props.city.foursquarePlaces[2].cat}</div>\r\n            </div>\r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.city.foursquarePlaces[3].name}</div>\r\n                <img src={props.city.foursquarePlaces[3].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.city.foursquarePlaces[3].address}</div>\r\n                <div className=\"temp\">{props.city.foursquarePlaces[3].cat}</div>\r\n            </div>\r\n            <div className=\"place\">\r\n                <div className=\"date\">{props.city.foursquarePlaces[4].name}</div>\r\n                <img src={props.city.foursquarePlaces[4].icon + '64.png'} alt=\"icon\"></img>\r\n                <div className=\"description\">Addrs: {props.city.foursquarePlaces[4].address}</div>\r\n                <div className=\"temp\">{props.city.foursquarePlaces[4].cat}</div>\r\n            </div>\r\n            \r\n          </div>\r\n          ) : <div>Select a City</div>\r\n        }\r\n      </div>\r\n    </div>\r\n    \r\n  <div className=\"bottom-container\">\r\n    <div className=\"future-weather\">\r\n      { !!props.city.foreCast && props.city.foreCast.length > 1 ? (\r\n        <div className=\"weather-forecast\">\r\n          \r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[0].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[0].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[0].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[0].temp}&deg; C</div>\r\n          </div>\r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[1].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[1].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[1].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[1].temp}&deg; C</div>\r\n          </div>\r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[2].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[2].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[2].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[2].temp}&deg; C</div>\r\n          </div>\r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[3].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[3].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[3].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[3].temp}&deg; C</div>\r\n          </div>\r\n          <div className=\"forecast-day\">\r\n              <div className=\"date\">{props.city.foreCast[4].date}日</div>\r\n              <img src={'http://openweathermap.org/img/wn/' + props.city.foreCast[4].icon + '@2x.png'} alt=\"icon\"></img>\r\n              <div className=\"description\">{props.city.foreCast[4].description}</div>\r\n              <div className=\"temp\">{props.city.foreCast[4].temp}&deg; C</div>\r\n          </div>\r\n          \r\n        </div>\r\n        ) : <div>Select a City</div>\r\n      }\r\n    </div>\r\n  </div>\r\n    \r\n</div>\r\n  );\r\n}\r\n\r\nexport default WeatherComp;","import React from 'react';\nimport './App.css';\n// import cityIcon from './assets/city.svg';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport GoogleMapsHolder from './components/GoogleMapsHolder';\nimport WeatherComp from './components/weatherComp';\nimport { cityType } from './interfaces';\n\n\nfunction App() {\n  const [ currCity, setCurrCity ] = React.useState<cityType>({} as cityType);\n\n  React.useEffect(() => {\n    console.log('Parent Effect fired ....');\n    console.log(currCity);\n  },[currCity]);\n\n  const sendDataToParent = (citi: cityType) => {\n    console.log('sendDataToParent callback fired ....');\n    console.log(citi);\n    setCurrCity(citi);\n    // return index;\n  };\n\n  return (\n    <div className=\"App\">\n      <Tabs defaultActiveKey=\"map\" id=\"uncontrolled-tab-example\" className=\"tabber\">\n        <Tab eventKey=\"map\" title=\"Map\" className=\"\">\n        <div className=\"left-side\">\n          <GoogleMapsHolder theCity={sendDataToParent} />\n        </div>\n            \n        </Tab>\n        <Tab eventKey=\"info\" title=\"Info\">\n          <div className=\"right-side\">\n            <WeatherComp city={currCity}></WeatherComp>\n          </div>\n        </Tab>\n      </Tabs>\n\n    {/* <div>Error: {error !== null ? error.message : 'No errors, YAY!'}</div>\n   \n    {!isWAPILoaded ? <div>Loading...</div> : \n    <div>Finished Loading...:\n    </div>}\n    {apiWeathers.map((item) => {\n        return(<h2>\n          {item.name}\n        </h2>)\n      })} */}\n    \n    \n    \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}